version: '3.8'
services:
  postgres-main:
    image: postgres:14-alpine
    container_name: postgres-main
    env_file:
      - env/.env.development
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
      - DATABASE_URL=${DATABASE_URL}
      - TZ=GMT
      - PGTZ=GMT
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME}']
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - pgdata-main:/var/lib/postgresql/data
      - ./scripts/init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    networks:
      - foxy-network

volumes:
  pgdata-main:
    driver: local

networks:
  foxy-network:
    name: foxy-network
    driver: bridge

  # backend-core:
  #   env_file:
  #     - env/.env
  #   container_name: backend-core
  #   networks:
  #     - foxy-network
  #   depends_on:
  #     - postgres-main
  #   build:
  #     context: '.'
  #     dockerfile: apps/core/Dockerfile
  #     target: base
  #   restart: unless-stopped
  #   ports:
  #     - ${PORT}:${PORT}
  #   tty: true
  #   # volumes:
  #   # - .:/usr/src/app:cached
  #   # - /usr/src/app/node_modules
  #   # - /usr/src/app/apps/core/node_modules
  #   # - ./apps/core:/usr/src/app/apps/core
  #   # - /usr/src/app/apps/core/node_modules
  #   # Run a command against the development stage of the image
  #   # command: pnpm --filter=core start:prod
